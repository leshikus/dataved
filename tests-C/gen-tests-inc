#!/usr/bin/ruby
#
# Accepted format
#
#     test NAME() {
#         // implementation in C
#     }
#

$indent = "    "
$depth = 0
$lineno = 1
def iputs(s)
    s.scan '}' do $depth -= 1 end
    print ($indent*$depth)
    s.scan '{' do $depth += 1 end
    puts s
    $lineno += 1
end

def nputs(*args)
    args.each do |s|
	puts s
	$lineno += 1
    end
end

filename = ARGV[0]
file = File.new(filename)
tests = []
while $_ = file.gets
    if $_ =~ /^#[di]/
	# pass #define and #includes through
	nputs $_
    elsif $_ =~ /^test (\w+)\(([^)]*)\)/
	name = $1;
	args = $2.split /,\s*/;
	#nputs "// #{$_.gsub(/\s*\{$/,'')}"
	iputs "void test_#{name}() {"
	tests << "test_#{name}"
	iputs "if (verbose) printf(\"#{name} \");"

	nputs "#line #{file.lineno+1} \"#{filename}\""
	while $_ = file.gets
	    break if $_ =~ /^\}/
	    nputs $_
	end
	nputs "#line #{$lineno} \"tests-inc.c\""
	iputs "if (verbose) printf(\".\\n\");"
	iputs "}"
	nputs ""
    end
end

iputs "#define TEST_NUMBER #{tests.length}"
iputs "test_t tests[] = {"
tests.each do |name|
    iputs "&#{name},"
end
iputs "};"

file.close
